{"version":3,"sources":["components/navbar.js","components/AllotModal.js","components/registeredlands.js","components/government.js","components/searched.js","components/search.js","components/default.js","components/landingpage.js","components/Yourlands.js","components/profile.js","components/Home.js","App.js","serviceWorker.js","index.js","ipfs.js","components/personalprof.js","components/landtes.js","components/setprofile.js"],"names":["navbar","react_default","a","createElement","className","Button","outline","color","NavLink","to","Component","Allot","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","GettxStatus","txHash","drizzlestate","transactionStack","state","StackId","concat","transactions","status","address","stackId","handleadd","bind","assertThisInitialized","handlesubmit","event","setState","target","value","preventDefault","contract","drizzle","contracts","Lands","landw","web3","utils","fromAscii","land","methods","cacheSend","from","accounts","gas","Modal","assign","size","centered","Header","closeButton","Title","Body","onSubmit","Form","Group","as","Row","Label","Control","type","onChange","block","Footer","onClick","onHide","Registeredland","dataKey","modalIsOpen","openModal","_this$props","drizzleState","cacheCall","item","dd","_this2","registeredlands","registeredLands","lb","lt","length","LandArr","i","lands","ln","toAscii","sz","lo","push","map","key","e","AllotModal_Allot","show","React","Registerland","id","returngov","Fragment","Col","md","registeredlands_Registeredland","landtes","searched","datakey","prevProps","componentDidMount","specs","landSpec","sp","sp1","sp2","sp3","titledeed","console","log","Table","href","iframe","url","position","search","es_Row","es_Col","searched_searched","page","landing","Row_default","Col_default","owningLand","vlue","landsarr","profile","Identity","returnid","re","personalprof","Yourlands_lands","setprofile","Home","drizzle_react","Consumer","drizzleContext","initialized","navbar_navbar","Switch","Route","exact","path","component","Landing","render","government_Registerland","search_search","profile_profile","Default","options","identity","drizzleStore","generateStore","Drizzle","App","Provider","BrowserRouter","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ipfs","require","IPFS","host","port","protocol","personalProf","valt","val1","img","react__WEBPACK_IMPORTED_MODULE_5___default","src","alt","Registration","C_Users_COLLINS_Desktop_land_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_COLLINS_Desktop_land_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_COLLINS_Desktop_land_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","landnumber","lat","title","ipfshash","date","handlelandnumber","C_Users_COLLINS_Desktop_land_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handlelandsize","handlelandlocation","handlelandlat","handlelandlog","handlelandfile","handleSubmit","dy","Date","dy2","toString","z","yn","file","files","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","result","_this3","Ipfs","add","error","hash","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","react_bootstrap_Form__WEBPACK_IMPORTED_MODULE_10___default","column","sm","reactstrap__WEBPACK_IMPORTED_MODULE_9__","name","he","handlefile","handlename","nm","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"static/js/main.70a1143d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Button } from 'reactstrap';\r\nimport './components.css'\r\n\r\nexport default class navbar extends Component {\r\n  render () {\r\n    return (\r\n      <div className='navbar'>\r\n        <Button outline color='link'>\r\n          <NavLink to='/'className='button'>HOME</NavLink>\r\n        </Button>\r\n        <div>\r\n          <NavLink to='/' className='App'>Help</NavLink>\r\n        </div>\r\n        <div>\r\n          <NavLink to='/' className='App'>About us</NavLink>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Col } from 'react-bootstrap/Col';\r\nimport { Button, Row } from 'reactstrap'\r\nimport React, { Component } from 'react'\r\nimport { Modal, Form } from 'react-bootstrap'\r\n\r\nexport default class Allot extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { address: '', stackId: null }\r\n    this.handleadd = this.handleadd.bind(this)\r\n    this.handlesubmit = this.handlesubmit.bind(this)\r\n  }\r\n  handleadd (event) {\r\n    this.setState({ address: event.target.value })\r\n  }\r\n  handlesubmit (event) {\r\n    event.preventDefault()\r\n    const contract = this.props.drizzle.contracts.Lands\r\n    const landw = this.props.drizzle.web3.utils.fromAscii(this.props.land)\r\n    const stackId = contract.methods['allotLand'].cacheSend(this.state.address, landw, {\r\n      from:this.props.drizzlestate.accounts[0], gas:500000\r\n    })\r\n    this.setState({stackId: stackId})\r\n  }\r\n  GettxStatus = () => {\r\n     const txHash = this.props.drizzlestate.transactionStack[this.state.StackId]\r\n     if (!txHash) return null\r\n     return `Transaction status: ${this.props.drizzlestate.transactions[txHash] && this.props.drizzlestate.transactions[txHash].status}`\r\n  }\r\n  render () {\r\n    \r\n    return (\r\n      <Modal {...this.props}\r\n        size='lg'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Allotment of land\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n           you are trying to Allot land number :<br />{this.props.land} <br />to a new  owner <br />\r\n           you are under obligation to do the right thing with uttermost Intergrity<br /><br />\r\n          <form onSubmit={this.handlesubmit} >\r\n            <Form.Group as={Row}>\r\n              <Form.Label> Address :</Form.Label>\r\n                <Form.Control type='text' onChange={this.handleadd} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button type='submit' color='primary' size='lg' block> Allot Land</Button>\r\n            </Form.Group>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n        <div >\r\n         {this.GettxStatus()}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Allot from './AllotModal'\r\n\r\nexport default class Registeredland extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { dataKey: null, land: '', modalIsOpen: false }\r\n    this.openModal = this.openModal.bind(this)\r\n  }\r\n  componentDidMount () {\r\n    const { drizzle, drizzleState } = this.props\r\n    const contract = drizzle.contracts.Lands\r\n    const dataKey = contract.methods['registeredLands'].cacheCall()\r\n    this.setState({ dataKey })\r\n  }\r\n  openModal (item) {\r\n    const dd = item\r\n    this.setState({ land: dd })\r\n    this.setState({ modalIsOpen: true })\r\n  }\r\n  render () {\r\n    const { Lands } = this.props.drizzleState.contracts\r\n    const registeredlands = Lands.registeredLands[this.state.dataKey]\r\n    const lb = registeredlands && registeredlands.value\r\n    const lt = registeredlands && registeredlands.value[0].length\r\n    const lna = 0\r\n    const loa = 1\r\n    const sza = 2\r\n    const LandArr = []\r\n    for (let i = 0; i < lt; i++) {\r\n      const lands = {\r\n        ln: this.props.drizzle.web3.utils.toAscii(lb[lna][i]),\r\n        sz: this.props.drizzle.web3.utils.toAscii(lb[sza][i]),\r\n        lo: this.props.drizzle.web3.utils.toAscii(lb[loa][i])\r\n      }\r\n      LandArr.push(lands)\r\n    }\r\n    let modalClose = () => this.setState({ modalIsOpen: false })\r\n    return (\r\n      <div>\r\n        {LandArr.map((item) =>\r\n          <div className='cot' key={item.ln} onClick={(e) => this.openModal(item.ln, e)}>\r\n            name:{item.ln}<br />\r\n            {item.sz} <br />\r\n            {item.lo}\r\n          </div>\r\n        )}\r\n        <Allot show={this.state.modalIsOpen} land={this.state.land} onHide={modalClose} drizzle={this.props.drizzle} drizzlestate={this.props.drizzleState} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport Registeredland from './registeredlands'\r\nimport Registration from './landtes'\r\nexport default class Registerland extends Component {\r\n   state = { dataKey: null }\r\n  componentDidMount() {\r\n    const { drizzle, drizzleState } = this.props\r\n    const contract = drizzle.contracts.Lands\r\n    const dataKey = contract.methods['returngov'].cacheCall();\r\n    this.setState({ dataKey }) \r\n  }\r\n  render () {\r\n    const { Lands } = this.props.drizzleState.contracts\r\n    const id = Lands.returngov[this.state.dataKey]\r\n    const idf = id&&id.value\r\n    if(idf === this.props.drizzleState.accounts[0]){\r\n    return (\r\n      < div className = 'App' >\r\n        < >\r\n          <Row>\r\n            <Col  md={4}>\r\n              <Registeredland drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\r\n            </Col>\r\n            <Col md={1}>\r\n              \r\n            </Col>\r\n            <Col>\r\n              <Registration drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className='App'>\r\n      you are un authorized to view this page \r\n  </div>)\r\n  }\r\n  \r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport Iframe from 'react-iframe'\r\n\r\nexport default class searched extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { dataKey: null }\r\n  }\r\n  componentDidMount () {\r\n    const { drizzle, land, drizzleState } = this.props\r\n    const contract = drizzle.contracts.Lands\r\n    const landw = drizzle.web3.utils.fromAscii(land)\r\n    const datakey = contract.methods['landSpec'].cacheCall(landw)\r\n    this.setState({ datakey })\r\n  }\r\n  componentDidUpdate (prevProps) {\r\n    if (this.props.land !== prevProps.land) {\r\n      this.componentDidMount()\r\n    }\r\n  }\r\n  render () {\r\n    const { Lands } = this.props.drizzleState.contracts\r\n    const specs = Lands.landSpec[this.state.datakey]\r\n    const sp = specs && specs.value[0]\r\n    const sp1 = specs && specs.value[1]\r\n    const sp2 = specs && specs.value[2]\r\n    const sp3 = specs && specs.value[3]\r\n    const sp4 = specs && specs.value[4]\r\n    const titledeed = 'https://ipfs.io/ipfs/' + sp1\r\n    const map = 'http://www.google.com/maps/place/' + sp3 + ',' + sp4\r\n    console.log(map)\r\n    return (\r\n      <div >\r\n      <>\r\n        <Table className='App'>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n              Current Owner:<br />\r\n                {sp}\r\n              </td>\r\n              <td>\r\n                Registration Date: <br />\r\n                {sp2}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                to download and find the land restriction and  rules find them in the linnk below <br />\r\n                <a href={titledeed} >kericho</a>\r\n              </td>\r\n              <td>\r\n                {sp3}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <a href={map} >\r\n                  <Iframe url={map}\r\n                    position='relative'\r\n                  />\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Searched from './searched'\r\nexport default class search extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = { dataKey: null, land: 'weretyu' }\r\n    this.searched = this.searched.bind(this)\r\n  }\r\n  searched (item) {\r\n    const dd = item\r\n    this.setState({ land: dd })\r\n  }\r\n  componentDidMount () {\r\n    const { drizzle, drizzleState } = this.props\r\n    const contract = drizzle.contracts.Lands\r\n    const dataKey = contract.methods['registeredLands'].cacheCall()\r\n    this.setState({ dataKey })\r\n  }\r\n  render () {\r\n    const { Lands } = this.props.drizzleState.contracts\r\n    const registeredlands = Lands.registeredLands[this.state.dataKey]\r\n    const lb = registeredlands && registeredlands.value\r\n    const lt = registeredlands && registeredlands.value[0].length\r\n    const lna = 0\r\n    const loa = 1\r\n    const sza = 2\r\n    const LandArr = []\r\n    for (let i = 0; i < lt; i++) {\r\n      const lands = {\r\n        ln: this.props.drizzle.web3.utils.toAscii(lb[lna][i]),\r\n        sz: this.props.drizzle.web3.utils.toAscii(lb[sza][i]),\r\n        lo: this.props.drizzle.web3.utils.toAscii(lb[loa][i])\r\n      }\r\n      LandArr.push(lands)\r\n    }\r\n    // console.log(this.state.land)\r\n    return (\r\n      <div className='App'>\r\n      < >\r\n        <Row>\r\n          <Col md={4}>\r\n            {LandArr.map((item) =>\r\n              <div className='cot' key={item.ln} onClick={(e) => this.searched(item.ln, e)}>name:{item.ln}<br /> {item.sz} <br />{item.lo}\r\n              </div>)}\r\n          </Col>\r\n          <Col>\r\n            <Searched drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} land={this.state.land} />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class page extends Component {\r\n  render () {\r\n    return (\r\n      <div className='App'>\r\n      page not found</div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport default class landing extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col>\r\n            <div className='App '>\r\n               to check your land an update your profile <br />\r\n              <Button outline color='link'>\r\n                <NavLink to='/profile'className='button'>Profile</NavLink>\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          </Col>\r\n          <Col>\r\n            <div className='App ' >\r\n              To search lands and check owners and history <br />\r\n              <Button outline color='link'>\r\n                <NavLink to='/search'className='button'>Searches</NavLink>\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div className='App ' >\r\n              this page is only for allowed/authorized users <br />\r\n              <Button outline color='link'>\r\n                <NavLink to='Government'className='button'>Government</NavLink>\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class lands extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { datakey: null }\r\n    const { drizzle, drizzleState } = this.props\r\n  }\r\n  componentDidMount () {\r\n    const contract = this.props.drizzle.contracts.Lands\r\n    const dataKey = contract.methods['owningLand'].cacheCall(this.props.drizzleState.accounts[0])\r\n    this.setState({ dataKey })\r\n  }\r\n  render () {\r\n    const { Lands } = this.props.drizzleState.contracts\r\n    const lands = Lands.owningLand[this.state.dataKey]\r\n    const vlue = lands && lands.value\r\n    const lt = lands && lands.value.length\r\n    const landsarr = []\r\n    for (let i = 0; i < lt; i++) {\r\n      const land = {\r\n        ln: this.props.drizzle.web3.utils.toAscii(vlue[i])\r\n      }\r\n      landsarr.push(land)\r\n    }\r\n    console.log(vlue)\r\n    return (\r\n      <>\r\n        {landsarr.map((item) =>\r\n          <div className='cot' key={item.ln}>\r\n            {item.ln}\r\n         </div>)}\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Setprofile from './setprofile'\r\nimport PersonalProf from './personalprof'\r\nimport Lands from './Yourlands'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport '../App.css'\r\n\r\nexport default class profile extends Component {\r\n    state = { dataKey: null }\r\n  componentDidMount() {\r\n    const contract = this.props.drizzle.contracts.Identity\r\n    const datakey = contract.methods['returnid'].cacheCall(this.props.drizzleState.accounts[0])\r\n    this.setState({ datakey: datakey })\r\n  }\r\n  render() {\r\n     const { Identity } = this.props.drizzleState.contracts\r\n    const profile = Identity.returnid[this.state.datakey]\r\n    const regis = profile && profile.value.re\r\n \r\n    if(regis) {\r\n      return (\r\n        <div className='App' >\r\n           <>\r\n             <Row>\r\n               <Col>\r\n                 <PersonalProf  drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\r\n               </Col>\r\n               <Col>\r\n                 <Lands  drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\r\n               </Col>\r\n               <Col>\r\n                 slfjjkl\r\n               </Col>\r\n             </Row> \r\n           </>\r\n        </div>  \r\n      )\r\n    }\r\n    return (\r\n      <div className='App'>\r\n        <Setprofile  drizzle={this.props.drizzle} drizzleState={this.props.drizzleState} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n// import { newContextComponents } from 'drizzle-react-components'\r\nimport { DrizzleContext } from 'drizzle-react'\r\nimport Navbar from './navbar'\r\nimport Gov from './government'\r\nimport Search from './search'\r\nimport Default from './default'\r\nimport Landing from './landingpage'\r\nimport Profile from './profile'\r\nimport '../App.css'\r\n// const { AccountData, ContractData, ContractForm } = newContextComponents\r\n\r\nexport default () => (\r\n  <DrizzleContext.Consumer>\r\n    {drizzleContext => {\r\n      const { drizzle, drizzleState, initialized } = drizzleContext\r\n      if (!initialized) {\r\n        return 'Loading...'\r\n      }\r\n      return (\r\n        <div className='App' >\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route path='/Government' render={(props) => <Gov {...props} drizzle={drizzle} drizzleState={drizzleState} />} />\r\n            <Route path='/search'  render={(props) => <Search {...props} drizzle={drizzle} drizzleState={drizzleState} />}/>\r\n            <Route path='/profile' render={(props) => <Profile {...props} drizzle={drizzle} drizzleState={drizzleState} />} />\r\n            <Route component={Default} />\r\n          </Switch>\r\n        </div>\r\n      )\r\n    }}\r\n  </DrizzleContext.Consumer>\r\n)\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport { Drizzle, generateStore } from 'drizzle'\nimport { DrizzleContext } from 'drizzle-react'\n// import drizzleOptions from './components/options'\nimport land from './contracts/Lands.json'\nimport identity from './contracts/Identity.json'\nimport Home from './components/Home'\nimport { BrowserRouter } from 'react-router-dom'\nconst options = { contracts: [land, identity] }\n\n// import Gov from './components/government'\nconst drizzleStore = generateStore(options)\nconst drizzle = new Drizzle(options, drizzleStore)\n\nexport default class App extends Component {\n  render () {\n    return (\n      <DrizzleContext.Provider drizzle={drizzle} >\n        <BrowserRouter>\n          <Home />\n        </BrowserRouter>\n      </DrizzleContext.Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport './components/components.css'\nimport App from './App.js'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister()\n","const IPFS = require('ipfs-api')\r\nconst ipfs = IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\r\nexport default ipfs\r\n","import React, { Component } from 'react'\r\n\r\nexport default class personalProf extends Component {\r\n  \r\n  state = { dataKey: null }\r\n  \r\n  componentDidMount () {\r\n    const { drizzle, drizzleState } = this.props\r\n    const contract = this.props.drizzle.contracts.Identity\r\n    const datakey = contract.methods['returnid'].cacheCall(this.props.drizzleState.accounts[0])\r\n    this.setState({datakey})\r\n    \r\n  }\r\n  render () {\r\n    const { Identity } = this.props.drizzleState.contracts\r\n    const profile = Identity.returnid[this.state.datakey]\r\n    const val = profile && profile.value\r\n    const valt = profile && profile.value[0]\r\n    const val1 =  profile && profile.value[1]\r\n    const img = 'https://ipfs.io/ipfs/'+valt \r\n    return (\r\n      <div className = 'formgov' >\r\n        <h1>This is Your Profile {val1} </h1>\r\n        <div >\r\n          <img src={img} alt=''/> ,<br />\r\n          {}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Row, Col, Button } from 'reactstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Ipfs from '../ipfs'\r\n\r\n\r\nexport default class Registration extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    const { drizzle, drizzleState } = this.props\r\n    this.state = { landnumber: '', size: '', location: '', lat: '', log: '', title: '', StackId: null, ipfshash: '', date:'' }\r\n    this.handlelandnumber = this.handlelandnumber.bind(this)\r\n    this.handlelandsize = this.handlelandsize.bind(this)\r\n    this.handlelandlocation = this.handlelandlocation.bind(this)\r\n    this.handlelandlat = this.handlelandlat.bind(this)\r\n    this.handlelandlog = this.handlelandlog.bind(this)\r\n    this.handlelandfile = this.handlelandfile.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    \r\n  }\r\n  handlelandnumber (event) {\r\n    const ln = this.props.drizzle.web3.utils.fromAscii(event.target.value)\r\n    this.setState({ landnumber: ln })\r\n    event.preventDefault() \r\n    const dy = new Date()\r\n    const dy2 = dy.toString()\r\n    console.log(dy)\r\n    this.setState({date:dy2})\r\n  }\r\n  handlelandsize (event) {\r\n    const z = this.props.drizzle.web3.utils.fromAscii(event.target.value)\r\n    this.setState({ size: z })\r\n    event.preventDefault()\r\n  }\r\n  handlelandlocation (event) {\r\n    const yn = this.props.drizzle.web3.utils.fromAscii(event.target.value)\r\n    this.setState({ location: yn })\r\n    event.preventDefault()\r\n  }\r\n  handlelandlat (event) {\r\n    this.setState({ lat: event.target.value })\r\n   event.preventDefault()\r\n  }\r\n  handlelandlog (event) {\r\n    this.setState({ log: event.target.value })\r\n    event.preventDefault()\r\n  }\r\n  handlelandfile (event) {\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () =>{\r\n      this.setState({ title:  Buffer(reader.result) })\r\n     console.log(this.state.title)\r\n    }\r\n    event.preventDefault()\r\n  }\r\n  handleSubmit (event) {\r\n    event.preventDefault()\r\n    Ipfs.files.add(this.state.title, (error,result) => {\r\n      if(error){\r\n        console.log(error)\r\n        return\r\n      }\r\n        this.setState({ ipfshash: result[0].hash })\r\n         console.log(this.state.ipfshash)\r\n \r\n       })\r\n     \r\n    console.log(this.state.date)\r\n    const contract = this.props.drizzle.contracts.Lands\r\n    const stackId = contract.methods['registerLand'].cacheSend(this.state.landnumber, this.state.size, this.state.location,this.state.log, this.state.lat, this.state.date, this.state.ipfshash,{\r\n      from:this.props.drizzleState.accounts[0], gas:500000\r\n    })\r\n    this.setState({ StackId: stackId })\r\n  }\r\n  GettxStatus = () => {\r\n    const txHash = this.props.drizzleState.transactionStack[this.state.StackId]\r\n    if(!txHash) return null\r\n    return `Transaction status: ${this.props.drizzleState.transactions[txHash] && this.props.drizzleState.transactions[txHash].status}`\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <>\r\n          <Row>\r\n            <Col >\r\n              <div className='formid'>\r\n                <h2> Register Land </h2>\r\n                <div className='form2'>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    <Form.Group as={Row} >\r\n                      <Form.Label column sm={3} >LandNumber:</Form.Label>\r\n                      <Col>\r\n                        <Form.Control type='text' onChange={this.handlelandnumber} />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                      <Form.Label column sm={3} >Size:</Form.Label>\r\n                      <Col>\r\n                        <Form.Control type='text'onChange={this.handlelandsize} />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                      <Form.Label column sm={3} >Location</Form.Label>\r\n                      <Col>\r\n                        <Form.Control type='text' onChange={this.handlelandlocation} />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label >lat</Form.Label>\r\n                        <Form.Control type='text' onChange={this.handlelandlat} />\r\n                      </Form.Group>\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label >log</Form.Label>\r\n                        <Form.Control type='text'onChange={this.handlelandlog} />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                      <Form.Label> Land Tittle Deed:</Form.Label>\r\n                      <Form.Control type='file' onChange={this.handlelandfile} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Button type='submit' color='primary' size='lg' block> Register</Button>\r\n                    </Form.Group>\r\n                  </form>\r\n                  <div>\r\n                    {this.GettxStatus()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col, Button } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Form } from 'react-bootstrap'\r\nimport Ipfs from '../ipfs'\r\nimport Profile from './personalprof.js'\r\n\r\n\r\nexport default class setprofile extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { name: '', hash: '', ipfshash: '', StackId: null,he:'' }\r\n    const { drizzle, drizzleState } = this.props\r\n    this.handlesubmit = this.handlesubmit.bind(this)\r\n    this.handlefile = this.handlefile.bind(this)\r\n    this.handlename = this.handlename.bind(this)\r\n    \r\n  }\r\n \r\n  handlename (event) {\r\n    event.preventDefault()\r\n    const nm = event.target.value\r\n    this.setState({ name:nm })\r\n  }\r\n  handlefile (event) {\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () =>{\r\n      this.setState({ hash:  Buffer(reader.result) })\r\n      console.log(this.state.hash)\r\n    }\r\n    event.preventDefault()\r\n  }\r\n  handlesubmit (event) {\r\n    event.preventDefault()\r\n    Ipfs.files.add(this.state.hash, (error, result) => {\r\n      if (error) {\r\n        console.log(error)\r\n        return\r\n      }\r\n      this.setState({ ipfshash: result[0].hash })\r\n      console.log(this.state.ipfshash)\r\n    \r\n    })\r\n     const contract = this.props.drizzle.contracts.Identity\r\n     const stackId = contract.methods['register'].cacheSend( this.state.ipfshash,this.state.name, {\r\n       from: this.props.drizzleState.accounts[0],\r\n       gas: 500000\r\n     })\r\n    \r\n     this.setState({\r\n       StackId: stackId\r\n     \r\n    })\r\n  }\r\n     GettxStatus = () => {\r\n       const txHash = this.props.drizzleState.transactionStack[this.state.StackId]\r\n       if (!txHash) return null\r\n       return `Transaction status: ${this.props.drizzleState.transactions[txHash] && this.props.drizzleState.transactions[txHash].status}`\r\n     }\r\n  \r\n  render () {\r\n    return (<div>\r\n      <>\r\n        <Row>\r\n          <Col >\r\n            <div className='formid'>\r\n              <h2> register your identity</h2>\r\n              <div className='form2'>\r\n                <Form onSubmit={this.handlesubmit} >\r\n                  <Form.Group>\r\n                    <Form.Label> Name:</Form.Label>\r\n                    <Form.Control type='text' onChange={this.handlename} />\r\n                  </Form.Group >\r\n                  <Form.Group>\r\n                    <Form.Label> ID card :</Form.Label>\r\n                    <Form.Control type='file' onChange={this.handlefile} />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Button type='submit' color='primary' size='lg' block> UPLOAD </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </></div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}